{"version":3,"sources":["Util/parse.js","Util/format.js","reducers/activeStairReducer.js","actions/actionTypes.js","reducers/projectReducer.js","reducers/rootReducer.js","actions/stairsActions.js","Util/styles.js","components/SelectBox.js","Util/constants.js","StairwellLayout/ReviewFlights.js","Util/validators.js","StairwellLayout/CollectTopData.js","StairwellLayout/CollectFloorLevelData.js","Util/stairCalcs.js","StairwellLayout/PlaceStair.js","StairwellLayout/StairwellLayoutContainer.js","actions/projectActions.js","StairwellEdit/StairwellEditContainer.js","App.js","Util/ajaxUtils.js","registerServiceWorker.js","index.js"],"names":["root","this","previous_parse","parse","s_siPrefix","m","cm","mm","um","nm","pm","km","METERS_PER_FOOT","_parse","strIn","NaN","str","trim","length","lm","match","parseFloat","firstFloat","replace","slice","isNaN","sgn","Math","sign","startsWith","_parseF","num","_parseM","toExport","F","FEET","M","METERS","noConflict","module","exports","call","previous_format","format","Object","create","get","_forward","enumerable","FT","KM","CM","base","to","_fmtFrom","as","assign","_fmtToFT","digits","sfx","arguments","undefined","_fmtToSI","IN","_fmtToFT_IN","INCHES","DEC","_fmtToFT_DEC","DECIMAL","_sfxFTIN","Array","isArray","_fmtToFT_IN_DEC","FRAC","denom","_fmtToFT_IN_FRAC","FRACTIONAL","valueIn","toFixed","val","feet","trunc","inches","abs","isFinite","denomConst","wholeInches","numerator","round","Number","isInteger","_siUnits","units","unitSz","activeStairReducer","state","action","type","stairwell","currentUiBrowserState","window","UiBrowserState","JSON","stairwells","find","stair","stairName","currentStep","isEditing","floorLevels","levels","planLevels","needsReflowed","projectReducer","project","projectGuid","combineReducers","activeStair","updateCurrentStairwell","formItemLayout","labelCol","xs","span","sm","lg","wrapperCol","formItemLayoutInline","radioStyle","display","height","lineHeight","SelectBox","props","value","options","label","stateKey","callBack","disabledItems","style","items","map","option","react_default","a","createElement","es_select","Option","key","disabled","includes","es_form","Item","width","onChange","defaultProps","objectSpread","feetOrInches","railingOptions","railLocationTypes","landingSupportTypes","ReviewFlights","handleStairValueUpdate","handleFlightsTableInputChange","handleUpdate","fracFormatter","table","dataSource","flights","pagination","rowKey","columns","title","dataIndex","render","landingWidth","record","input","target","landingLength","dogLegLength","riseHeight","riserHeight","runLength","expandedRowRender","flight","layout","name","stairWidth","stairEdgeOffset","components_SelectBox","interiorRailType","constants","exteriorRailType","landingSupportType","es_button","block","onClick","isInFeetOrInches","CollectTopData","handleStairInputChange","handleStairDirectionCheck","handleStoryEnter","handleLevelSelectionUpdate","Panel","Collapse","renderSelect","floorLevelSelections","level","id","levelName","itemDefintion","customLabel","popover","placement","content","trigger","arrowPointAtCenter","textDecoration","help","bottomLevelId","topLevelId","es_checkbox","Group","landingsLevels","es_switch","defaultChecked","checked","landingsAtFloorLevels","landingElevationDelta","intermediateLandingSupportType","es_radio","stairwellLengthHandling","validateStatus","predeterminedStairwellLength","stairwellExcessLengthHandling","stairwellWidthHandling","stairwellWidthF","isClockwise","maxFlightRise","collapse","accordion","activeKey","storiesDefinedBy","header","input_number","min","max","defaultValue","storyCount","defaultStoryHeight","placeholder","CollectFloorLevelData","addStory","handleElevationChange","handleChangeStoryFlightCount","handleLandingElevationDeltaChange","checkFlighGeometry","handleStepClick","sortedLevels","stories","sort","b","elevation","storyId","onBlur","storyFlights","filter","x","story","flightRows","index","isBottomFlight","isTopFlight","flightId","topElevation","bottomElevation","divider","renderFlights","footer","icon","handleExcessLandingWidths","sortedFlights","excessLandingDelta","stairLength","console","log","i","resequenceFlights","calculateStoryFlights","storyHeight","idStart","flightElevation","storyRisers","ceil","minimumRiserHeight","bottomRunRisers","upperRunRisers","flightRiserHeight","risers","isDogLeg","treadWidth","push","concat","isBottomStair","isTopStair","railingPanelType","floorLevelLandingSupportType","hasLanding","calculateStairDimensionsWithDogLegs","stairWellLength","apply","toConsumableArray","nextFlight","difference","thisDogLeg","nextDogLeg","fixDoubleDogLegs","PlaceStair","handleWindowClose","planLevel","StairwellLayoutContainer","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","bind","assertThisInitialized","handleTableInputChange","calculateStairDims","calculateFlightDims","handleAddStoryToggle","_this2","setTimeout","getFloorLevels","getFloorPlans","getProjectGuid","invalidFlights","checkFlightGeometry","stringify","delta","storyIndex","findIndex","currentStory","adjacentUpdatedStoryFlights","existingStoryFlights","startingFlightId","updatedStoryFlights","adjacentStory","adjacentStoryHeight","existingAdjacentStoryFlights","adjacentStartingFlightId","adjacentElevationDelta","updatedFlights","flightCount","updatedStory","splice","updatedStories","updatedStair","newElevation","isTop","flightIndex","adjacentFlightIndex","flightField","adjacentFlightField","_this3","o","topFloor","updatedItem","storyName","defineProperty","addingStory","e","step","closeWindow","field","formValue","_this4","floorLevelsFilteredBySelections","event","_this5","alert","selectedLevels","modelLevelId","_sortBy","elevationDelta","calculateFlightsFromStories","stairwellWidth","flightHeight","flightRisers","calculateStairDimensionsFromFlightElevations","_this6","collectTopData","StairwellLayout_CollectTopData","collectFloorData","StairwellLayout_CollectFloorLevelData","collectFlightData","StairwellLayout_ReviewFlights","placeStair","StairwellLayout_PlaceStair","row","card","margin","extra","toggleDrawer","steps","current","Step","renderCurrentStep","Component","connect","dispatch","StairwellEditContainer","handleStairSelect","getProject","getStairwell","history","stairs","col","renderStairSelect","currentStair","withRouter","App","drawerVisible","handleInputChange","handlePostStair","setState","stairWellData","projectId","configurationJson","stairwellId","url","data","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","responseText","setRequestHeader","send","postAjax","className","drawer","closable","onClose","visible","HashRouter","Route","exact","path","StairwellLayout_StairwellLayoutContainer","StairwellEdit_StairwellEditContainer","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","store","createStore","rootReducer","minimumLandingWidth","wallClearance","compose","devToolsExtension","f","_includes","toString","r","Date","getTime","random","substring","repeat","guid","substr","ReactDOM","es","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.da47d42d.chunk.js","sourcesContent":["// eslint-disable-next-line no-extra-semi\r\n;(function() {\r\n  'use strict';\r\n  const root            = this;\r\n  const previous_parse  = root.parse;\r\n\r\n  const s_siPrefix = {\r\n    m  : 1,\r\n    cm : 1e-2,\r\n    mm : 1e-3,\r\n    um : 1e-6,\r\n    nm : 1e-9,\r\n    pm : 1e-12,\r\n    km : 1e+3\r\n  };\r\n\r\n  const METERS_PER_FOOT = 0.3048;\r\n\r\n  // ---------------------------------------------------------\r\n  function _parse(strIn)\r\n  {\r\n    if (!strIn || typeof strIn !== 'string' ) {\r\n      return NaN;\r\n    }\r\n    let str = strIn.trim();\r\n    if (str.length == 0) {\r\n      return NaN;\r\n    }\r\n\r\n    // Try +-: 1/2\", 11/16\"; trailing space OK, but nothing else\r\n    // Note: Trailing \" is mandatory!\r\n    {\r\n      let lm = str.match(/^([+-]?\\d+)\\/(\\d+)\\\" *$/);\r\n      if (lm) {\r\n        return (parseFloat(lm[1]) / parseFloat(lm[2])) / 12.0 ;\r\n      }\r\n    }\r\n\r\n    // Try +-: 5, 1.2e7, .1e+2, 3e-1, 3.e1\r\n    let firstFloat = NaN;\r\n    {\r\n      let lm = str.match(/^[+-]? *(?:\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?/i);\r\n      if (!lm) {\r\n        return NaN;\r\n      }\r\n      firstFloat = parseFloat(lm[0].replace(/ */g, ''));  // Clear spaces on the way\r\n      str = str.slice(lm[0].length);   // Don't trim just yet!\r\n    }\r\n\r\n    if (str.length == 0 || isNaN(firstFloat)) {\r\n      return firstFloat;\r\n    }\r\n\r\n    let sgn = Math.sign(firstFloat);\r\n    if (sgn === 0) {\r\n      sgn = strIn.startsWith('-') ? -1 : 1;\r\n    }\r\n\r\n    // If inches, then end of story\r\n    if (str.match(/^(\\\"| *in) *$/i)) {\r\n      return firstFloat / 12.0;\r\n    }\r\n    {\r\n      let lm = str.match(/^ +(\\d+)\\/(\\d+)\\\" *$/i);\r\n      if (lm) {\r\n        // If original input was: 7 11/16\"\r\n        return (firstFloat + sgn * parseFloat(lm[1]) / parseFloat(lm[2])) / 12.0;\r\n      }\r\n    }\r\n    // Try explicit units\r\n    {\r\n      let lm = str.match(/^ *(m|cm|mm|um|nm|pm|km) *$/i);\r\n      if (lm) {\r\n        // Return an array to signal that the output is in METERS:\r\n        return [firstFloat * s_siPrefix[lm[1]], true];\r\n      }\r\n    }\r\n\r\n    // Should be feet now\r\n    {\r\n      let lm = str.match(/^(?:\\'| *ft|-| +-?) */i);   // Order matters here!\r\n      if (!lm) {\r\n        return NaN;\r\n      }\r\n      str = str.slice(lm[0].length).trim();\r\n      if (str.length == 0) {\r\n        if (lm[0].match(/-/)) {\r\n          return NaN; // Trailing dash - e.g. strIn was: 7-\r\n        }\r\n        return firstFloat;\r\n      }\r\n    }\r\n\r\n    // Now we can only have left: 2, 2.3, 7/8, 2 7/8, with an optional \" at the end\r\n    {\r\n      let lm = str.match(/^(\\d+(?:\\.\\d*)?)(?:\\\"| *in)? *$/);\r\n      if (lm) {\r\n        return firstFloat + sgn * parseFloat(lm[1]) / 12.0 ;\r\n      }\r\n      lm = str.match(/^(\\d+)\\/(\\d+)(\\\"| *in)? *$/);\r\n      if (lm) {\r\n        return firstFloat + sgn * (parseFloat(lm[1]) / parseFloat(lm[2])) / 12.0 ;\r\n      }\r\n      lm = str.match(/^(\\d+) +(\\d+)\\/(\\d+)(\\\"| *in)? *$/);\r\n      if (lm) {\r\n        return firstFloat + sgn * (parseFloat(lm[1]) + parseFloat(lm[2]) / parseFloat(lm[3])) / 12.0 ;\r\n      }\r\n    }\r\n\r\n    return NaN;\r\n  }\r\n\r\n  // We are trying to avoid unnecessary round-trip conversions like meters->feet->meters,\r\n  // in order to avoid machine epsilon noise, e.g. 1m parsing as 0.99999999999\r\n\r\n  // Return length in FEET:\r\n  function _parseF(strIn) {\r\n    // let [num, inMeters] = _parse(strIn); --- This line crashes for some reason ... WHY???\r\n    //                                      --- TypeError: _parse is not a function\r\n    // if (inMeters === undefined) {\r\n    //   return num;\r\n    // }\r\n    let num = _parse(strIn);\r\n    if (typeof num === 'number') {\r\n      return num;\r\n    }\r\n    return num[0] /  METERS_PER_FOOT;\r\n  }\r\n\r\n  // Return length in METERS:\r\n  function _parseM(strIn) {\r\n    let num = _parse(strIn);\r\n    if (typeof num === 'number') {\r\n      return num * METERS_PER_FOOT;\r\n    }\r\n    return num[0];\r\n  }\r\n\r\n  const toExport = {\r\n    F         : _parseF,\r\n    FEET      : _parseF,\r\n    M         : _parseM,\r\n    METERS    : _parseM,\r\n  };\r\n\r\n  toExport.METERS_PER_FOOT = METERS_PER_FOOT;\r\n\r\n  // --- Node.js and Browser support shebang ---\r\n  toExport.noConflict = function() {\r\n    root.parse = previous_parse;\r\n    return toExport;\r\n  };\r\n  if( typeof exports !== 'undefined' ) {\r\n    if( typeof module !== 'undefined' && module.exports ) {\r\n      exports = module.exports = toExport;\r\n    }\r\n    exports.parse = toExport;\r\n  }\r\n  else {\r\n    root.parse = toExport;\r\n  }\r\n}).call(this);\r\n","// eslint-disable-next-line no-extra-semi\r\n; (function () {\r\n  \"use strict\";\r\n  const root = this;\r\n  const previous_format = root.format;\r\n\r\n  const METERS_PER_FOOT = 0.3048;\r\n\r\n  const format = Object.create(null, {\r\n    FEET: { get: function () { return _forward(METERS_PER_FOOT); }, enumerable: true },\r\n    FT: { get: function () { return _forward(METERS_PER_FOOT); }, enumerable: true },\r\n    F: { get: function () { return _forward(METERS_PER_FOOT); }, enumerable: true },\r\n    METERS: { get: function () { return _forward(1); }, enumerable: true },\r\n    M: { get: function () { return _forward(1); }, enumerable: true },\r\n    KM: { get: function () { return _forward(1e3); }, enumerable: true },\r\n    CM: { get: function () { return _forward(1e-2); }, enumerable: true },\r\n  });\r\n\r\n  function _forward(base) {\r\n    return Object.create(null, {\r\n      to: { get: function () { return _fmtFrom(base); } },\r\n      as: { get: function () { return _fmtFrom(base); } }\r\n    });\r\n  }\r\n  function _fmtFrom(base) {\r\n    return Object.assign(\r\n      Object.create(null, {\r\n        FEET: { get: function () { return _fmtToFT(base); } },\r\n        FT: { get: function () { return _fmtToFT(base); } },\r\n        F: { get: function () { return _fmtToFT(base); } }\r\n      }),\r\n      {\r\n        M: function (digits, sfx = ' m') { return _fmtToSI(base, 'm', digits, sfx); },\r\n        METERS: function (digits, sfx = ' m') { return _fmtToSI(base, 'm', digits, sfx); },\r\n        KM: function (digits, sfx = ' km') { return _fmtToSI(base, 'km', digits, sfx); },\r\n        CM: function (digits, sfx = ' cm') { return _fmtToSI(base, 'cm', digits, sfx); },\r\n      }\r\n    );\r\n  }\r\n  function _fmtToFT(base) {\r\n    return Object.assign(\r\n      Object.create(null, {\r\n        IN: { get: function () { return _fmtToFT_IN(base); } },\r\n        INCHES: { get: function () { return _fmtToFT_IN(base); } }\r\n      }),\r\n      {\r\n        DEC: function (digits, sfx = ' ft') { return _fmtToFT_DEC(base, digits, sfx); },\r\n        DECIMAL: function (digits, sfx = ' ft') { return _fmtToFT_DEC(base, digits, sfx); }\r\n      }\r\n    );\r\n  }\r\n  function _sfxFTIN(sfx) {\r\n    if (Array.isArray(sfx) && sfx.length == 2) {\r\n      return sfx;\r\n    }\r\n    return [\"' \", '\"'];\r\n  }\r\n  function _fmtToFT_IN(base) {\r\n    return {\r\n      DEC: function (digits, sfx = _sfxFTIN()) { return _fmtToFT_IN_DEC(base, digits, sfx); },\r\n      DECIMAL: function (digits, sfx = _sfxFTIN()) { return _fmtToFT_IN_DEC(base, digits, sfx); },\r\n      FRAC: function (denom, sfx = _sfxFTIN()) { return _fmtToFT_IN_FRAC(base, denom, sfx); },\r\n      FRACTIONAL: function (denom, sfx = _sfxFTIN()) { return _fmtToFT_IN_FRAC(base, denom, sfx); }\r\n    };\r\n  }\r\n  function _fmtToFT_DEC(base, digits, sfx) {\r\n    return function (valueIn) {\r\n      const val = valueIn * (base / METERS_PER_FOOT);\r\n      return 1 * val.toFixed(digits) + sfx;\r\n    };\r\n  }\r\n  function _fmtToFT_IN_DEC(base, digits, sfx) {\r\n    sfx = _sfxFTIN(sfx);\r\n    return function (valueIn) {\r\n      const val = valueIn * (base / METERS_PER_FOOT);\r\n      let feet = Math.trunc(val);\r\n      let inches = Math.abs((12 * (val - feet)).toFixed(digits));\r\n      if (inches === 12) {\r\n        inches = 0;\r\n        feet += Math.sign(val);\r\n      }\r\n      return feet + sfx[0] + Math.abs(inches.toFixed(digits)) + sfx[1];\r\n    };\r\n  }\r\n  function _fmtToFT_IN_FRAC(base, denom, sfx) {\r\n    sfx = _sfxFTIN(sfx);\r\n    if (!denom || !isFinite(denom) || denom < 1) {\r\n      denom = 16;\r\n    }\r\n    const denomConst = denom;\r\n\r\n    return function (valueIn) {\r\n      let denom = denomConst;   // Because \"denom\" will change during fraction simplification!\r\n      const val = valueIn * (base / METERS_PER_FOOT);\r\n      let feet = Math.trunc(val);\r\n      const inches = 12 * (val - feet);\r\n      let wholeInches = Math.trunc(inches);\r\n      let numerator = Math.round(denom * (inches - wholeInches));\r\n\r\n      if (numerator === 0) {\r\n        return (feet === 0 && valueIn < 0 ? '-' : '') + feet + sfx[0] + Math.abs(wholeInches) + sfx[1];\r\n      }\r\n      while (numerator % 2 === 0 && denom % 2 === 0) {\r\n        numerator /= 2;\r\n        denom /= 2;\r\n      }\r\n      if (denom !== 0 && Number.isInteger(numerator / denom)) {\r\n        wholeInches = wholeInches + (numerator / denom);\r\n        if (wholeInches === 12) {\r\n          feet = feet + 1;\r\n          wholeInches = 0;\r\n        }\r\n        return (feet === 0 && valueIn < 0 ? '-' : '') + feet + sfx[0] + Math.abs(wholeInches) + sfx[1];\r\n      }\r\n\r\n      return (feet === 0 && valueIn < 0 ? '-' : '') + feet + sfx[0] + Math.abs(wholeInches) + ' ' + Math.abs(numerator) + '/' + denom + sfx[1];\r\n    };\r\n  }\r\n\r\n  const _siUnits = {\r\n    pm: 1e-12,\r\n    nm: 1e-9,\r\n    um: 1e-6,\r\n    mm: 1e-3,\r\n    cm: 1e-2,\r\n    m: 1,\r\n    km: 1e+3,\r\n  };\r\n  function _fmtToSI(base, units, digits, sfx) {\r\n    const unitSz = _siUnits[units];\r\n    if (unitSz === undefined) throw 'Unsupported SI length unit';\r\n    return function (valueIn) {\r\n      const val = valueIn * (base / unitSz);\r\n      return 1 * val.toFixed(digits) + sfx;\r\n    };\r\n  }\r\n\r\n  // ------------------- EXPORTS ----------------------\r\n  const toExport = format;\r\n\r\n  // --- Node.js and Browser support shebang ---\r\n  toExport.noConflict = function () {\r\n    root.format = previous_format;\r\n    return toExport;\r\n  };\r\n  if (typeof exports !== 'undefined') {\r\n    if (typeof module !== 'undefined' && module.exports) {\r\n      exports = module.exports = toExport;\r\n    }\r\n    exports.format = toExport;\r\n  }\r\n  else {\r\n    root.format = toExport;\r\n  }\r\n}).call(this);\r\n","import { UPDATE_CURRENT_STAIRWELL, GET_STAIRWELL, GET_FLOOR_LEVELS, TOGGLE_STAIR_REFLOW_FLAG, GET_FLOOR_PLANS } from '../actions/actionTypes';\r\n\r\n\r\nconst activeStairReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_CURRENT_STAIRWELL:\r\n            return Object.assign({}, state, action.stairwell)\r\n        case GET_STAIRWELL:\r\n            const currentUiBrowserState = window.UiBrowserState ? JSON.parse(window.UiBrowserState.state) : null;\r\n            if (!currentUiBrowserState) return state;\r\n            let stairwell = currentUiBrowserState.stairwells.find(stair => stair.stairName === action.stairName);\r\n            stairwell.currentStep = 1;\r\n            stairwell.isEditing = true;\r\n            return Object.assign({}, state, stairwell)\r\n        case GET_FLOOR_LEVELS:\r\n            const floorLevels = window.UiBrowserState ? JSON.parse(window.UiBrowserState.levels) : null\r\n            if (!floorLevels) return state;\r\n            return Object.assign({}, state, { floorLevels });\r\n        case GET_FLOOR_PLANS:\r\n            const planLevels = window.UiBrowserState ? JSON.parse(window.UiBrowserState.planLevels) : null\r\n            if (!planLevels) return state;\r\n            return Object.assign({}, state, { planLevels });\r\n        case TOGGLE_STAIR_REFLOW_FLAG:\r\n            return Object.assign({}, state, action.needsReflowed)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default activeStairReducer","export const UPDATE_CURRENT_STAIRWELL = 'UPDATE_CURRENT_STAIRWELL';\r\nexport const GET_STAIRWELL = 'GET_STAIRWELL';\r\nexport const UPDATE_PROJECT = 'UPDATE_PROJECT';\r\nexport const GET_PROJECT = 'GET_PROJECT';\r\nexport const GET_PROJECT_GUID = 'GET_PROJECT_GUID';\r\nexport const GET_FLOOR_LEVELS = 'GET_FLOOR_LEVELS';\r\nexport const GET_FLOOR_PLANS = 'GET_FLOOR_PLANS';\r\nexport const TOGGLE_STAIR_REFLOW_FLAG = 'TOGGLE_STAIR_REFLOW_FLAG';","import { UPDATE_PROJECT, GET_PROJECT, GET_PROJECT_GUID } from '../actions/actionTypes';\r\n\r\n\r\nconst projectReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case UPDATE_PROJECT:\r\n            return Object.assign({}, state, action.project)\r\n        case GET_PROJECT:\r\n            const currentUiBrowserState = window.UiBrowserState ? JSON.parse(window.UiBrowserState.state) : null;\r\n            if (!currentUiBrowserState) return state;\r\n            return Object.assign({}, state, currentUiBrowserState)\r\n        case GET_PROJECT_GUID:\r\n            const projectGuid = window.UiBrowserState ? window.UiBrowserState.projectGuid : null;\r\n            if (!projectGuid) return state;\r\n            return Object.assign({}, state, {projectGuid})\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default projectReducer","import {combineReducers} from 'redux';\r\nimport activeStair from './activeStairReducer';\r\nimport project from './projectReducer';\r\n\r\nexport default combineReducers({\r\n    activeStair,\r\n    project\r\n})","import {UPDATE_CURRENT_STAIRWELL, GET_STAIRWELL, GET_FLOOR_LEVELS, GET_FLOOR_PLANS, TOGGLE_STAIR_REFLOW_FLAG} from './actionTypes';\r\n\r\nexport const updateCurrentStairwell = stairwell => ({\r\n    type: UPDATE_CURRENT_STAIRWELL,\r\n    stairwell\r\n});\r\n\r\n// TODO:  Possibly send stair id.  However, stair name also has to be unique, so perhpas this should be the id.\r\nexport const getStairwell = stairName => ({\r\n    type: GET_STAIRWELL,\r\n    stairName\r\n});\r\n\r\nexport const getFloorLevels = () => ({\r\n    type: GET_FLOOR_LEVELS\r\n});\r\n\r\nexport const getFloorPlans = () => ({\r\n    type: GET_FLOOR_PLANS\r\n});\r\n\r\nexport const toggleStairReflowFlag = reflowFlag => ({\r\n    type: TOGGLE_STAIR_REFLOW_FLAG,\r\n    needsReflowed : reflowFlag\r\n});\r\n","export const formItemLayout = {\r\n    labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 },\r\n        lg: { span: 10 }\r\n    },\r\n    wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 },\r\n        lg: { span: 14 }\r\n    },\r\n};\r\nexport const formItemLayoutInline = {\r\n    // labelCol: {\r\n    //     span: 3\r\n    // },\r\n    // wrapperCol: {\r\n    //     span: 21\r\n    // },\r\n};\r\n\r\nexport const radioStyle = {\r\n    display: 'block',\r\n    height: '30px',\r\n    lineHeight: '30px',\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Select } from 'antd';\r\nimport {formItemLayout } from '../Util/styles';\r\n\r\nconst SelectBox = (props) => {\r\n    const { value, options, label, stateKey, callBack, disabledItems, style } = props;\r\n    const items = options.map(option => <Select.Option value={option.key} key={option.key} disabled={disabledItems.includes(option.key)}>{option.label}</Select.Option>);\r\n    \r\n\r\n    return (\r\n        <Form.Item label={label}  {...style} >\r\n            <Select\r\n                value={value}\r\n                style={{ width: 200 }}\r\n                onChange={(value) => callBack(stateKey, value)}\r\n                key={stateKey}>\r\n                {items}\r\n            </Select>\r\n        </Form.Item >\r\n    )\r\n};\r\n\r\nSelectBox.defaultProps = {\r\n    disabledItems: [],\r\n    style: {...formItemLayout}\r\n}\r\n\r\nSelectBox.propTypes = {\r\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    options: PropTypes.array,\r\n    label: PropTypes.string,\r\n    stateKey: PropTypes.string,\r\n    callBack: PropTypes.func,\r\n    disabledItems: PropTypes.array\r\n}\r\n\r\nexport default SelectBox;","export const feetOrInches = 'In feet and/or inches.  Examples: 48\", 4\\' or 4\\' 6 1/2\"';\r\nexport const awsApiUrl = 'https://nx16rqcmgf.execute-api.us-west-2.amazonaws.com/dev/v1/stairwell';\r\nexport const sampleLevels = [\r\n    {\r\n        \"id\": 30,\r\n        \"levelName\": \"Bogus Level 1\",\r\n        \"elevation\": -15.333333333333334\r\n    },\r\n    {\r\n        \"id\": 9946,\r\n        \"levelName\": \"Level 2\",\r\n        \"elevation\": -0.5\r\n    },\r\n    {\r\n        \"id\": 370360,\r\n        \"levelName\": \"Level 3\",\r\n        \"elevation\": 14.875\r\n    },\r\n    {\r\n        \"id\": 370404,\r\n        \"levelName\": \"Level 4\",\r\n        \"elevation\": 30.25\r\n    },\r\n    {\r\n        \"id\": 370448,\r\n        \"levelName\": \"Level 5\",\r\n        \"elevation\": 45.541666666666664\r\n    },\r\n    {\r\n        \"id\": 370691,\r\n        \"levelName\": \"Level 6\",\r\n        \"elevation\": 60.875\r\n    }\r\n];\r\n\r\nexport const samplePlanLevels =[\"Level 1\",\"Level 2\",\"Site\",\"Level 3\",\"Level 4\",\"Level 5\",\"Level 6\"];\r\n\r\nexport const initialState =\r\n{\r\n    activeStair: {\r\n        storiesDefinedBy: \"import\",\r\n        currentStep: 0,\r\n        drawerVisible: false,\r\n        treadWidth: 11,\r\n        stairwellWidthF: '110\"',\r\n        stairWidth: 48.5,\r\n        isClockwise: true,\r\n        minimumLandingWidth: 44,\r\n        minimumRiserHeight: 6.95,\r\n        // TODO: Fully implement.  This factor should be applied in the revit adn solidworks model to create a clearance around the stair.\r\n        wallClearance: .5,\r\n        defaultStoryHeight: \"12'\",\r\n        storyCount: 3,\r\n        stairwellLengthHandling: 'minimum',\r\n        stairwellExcessLengthHandling: 'increaseStoryLandings',\r\n        stairwellWidthHandling: 'minimum',\r\n        landingElevationDelta: '0\"',\r\n        stories: [],\r\n        flights: [],\r\n        floorLevels: [],\r\n        railingPanelType: 'horizontalPicket',\r\n        exteriorRailType: 'handrail',\r\n        interiorRailType: 'guardrail',\r\n        maxFlightRise: '8\\' 0\"',\r\n        landingsAtFloorLevels: true,\r\n        stairEdgeOffset: 2\r\n    },\r\n    project:{\r\n        stairwells: []\r\n        \r\n    }\r\n};\r\n\r\n\r\nexport const railingOptions = [\r\n    {\r\n        key: \"industrial\",\r\n        label: \"Industrial\"\r\n    },\r\n    {\r\n        key: \"horizontalPicket\",\r\n        label: \"Horizontal Picket\"\r\n    },\r\n    {\r\n        key: \"verticalPicket\",\r\n        label: \"Vertical Picket\"\r\n    },\r\n    {\r\n        key: \"meshRail\",\r\n        label: \"Mesh Rail\"\r\n    },\r\n    {\r\n        key: \"steelPanel\",\r\n        label: \"Steel Panel\"\r\n    },\r\n    {\r\n        key: \"none\",\r\n        label: \"No guard railings\"\r\n    },\r\n];\r\n\r\nexport const railLocationTypes = [\r\n    {\r\n        key: \"handrail\",\r\n        label: \"Wall mounted handrail\"\r\n    },\r\n    {\r\n        key: \"guardrail\",\r\n        label: \"Guardrail\"\r\n    },\r\n    {\r\n        key: \"none\",\r\n        label: \"none\"\r\n    }\r\n];\r\n\r\nexport const landingSupportTypes = [\r\n    {\r\n        key: 'hangerRod',\r\n        label: 'Hanger Rods'\r\n    },\r\n    {\r\n        key: 'tubeColumns',\r\n        label: 'Tube Columns'\r\n    },\r\n    {\r\n        key: 'shelfAngle',\r\n        label: 'Shelf Angle'\r\n    },\r\n    {\r\n        key: 'framed',\r\n        label: 'Connect to Framing'\r\n    },\r\n]\r\n\r\n","import React from 'react';\r\nimport { Input, Table, Form, Button } from 'antd';\r\nimport SelectBox from '../components/SelectBox';\r\nimport * as constants from '../Util/constants';\r\nimport { formItemLayoutInline } from '../Util/styles';\r\nimport { format } from '../Util/format';\r\n//floor levels are unique flights becuase they generally allow egress in and out of stair.  We use leels to anchor the stair heights and define the number of intermediate landings.\r\nconst ReviewFlights = (props) => {\r\n    const { handleStairValueUpdate, handleFlightsTableInputChange, activeStair, handleUpdate } = props;\r\n    const fracFormatter = (value) => format.FT.to.FT.IN.FRAC(32)(value);\r\n    //handleFlightsTableInputChange(value, record, field) \r\n    const editFlight = (flight) => {\r\n        return (\r\n\r\n            <Form layout=\"inline\">\r\n                <Form.Item\r\n                    label=\"Stair Width:\"\r\n                //validateStatus={isInFeetOrInches(activeStair.stairWidth) ? \"\" : \"error\"}\r\n                //help={constants.feetOrInches} >\r\n                >\r\n                    <Input onChange={(value) => handleFlightsTableInputChange(value.target.value, flight, \"stairWidth\")} name=\"stairWidth\" value={flight.stairWidth} style={{ width: 150 }} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Stair to Edge of Landing Offset:\"\r\n                >\r\n                    <Input onChange={(value) => handleFlightsTableInputChange(value.target.value, flight, \"stairEdgeOffset\")} name=\"stairEdgeOffset\" value={flight.stairEdgeOffset} style={{ width: 150 }} />\r\n                </Form.Item>\r\n                <SelectBox\r\n                    style={formItemLayoutInline}\r\n                    value={flight.interiorRailType}\r\n                    options={constants.railLocationTypes}\r\n                    label=\"Stair Interior Railing Type: \"\r\n                    stateKey=\"interiorRailType\"\r\n                    callBack={(key, value) => handleFlightsTableInputChange(value, flight, key)}\r\n                />\r\n                <SelectBox\r\n                    style={formItemLayoutInline}\r\n                    value={flight.exteriorRailType}\r\n                    options={constants.railLocationTypes}\r\n                    label=\"Stair Exterior Railing Type: \"\r\n                    stateKey=\"exteriorRailType\"\r\n                    callBack={(key, value) => handleFlightsTableInputChange(value, flight, key)}\r\n                />\r\n                <SelectBox\r\n                    value={flight.landingSupportType}\r\n                    options={constants.landingSupportTypes}\r\n                    label=\"Landing Support Types\"\r\n                    stateKey=\"landingSupportType\"\r\n                    callBack={(key, value) => handleFlightsTableInputChange(value, flight, key)}\r\n                />\r\n            </Form>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div><Table dataSource={activeStair.flights} pagination={false} rowKey='flightId'\r\n            columns={[{\r\n                title: 'Flight',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                //render: (name, record) => (<Input value={name} onChange={(value) => handleFlightsTableInputChange(value, record, 'name')} />)\r\n            },\r\n            {\r\n                title: 'Story',\r\n                dataIndex: 'story',\r\n                key: 'story',\r\n                //render: (story, record) => (<Input value={story} onChange={(value) => handleFlightsTableInputChange(value, record, 'story')} />)\r\n            },\r\n            {\r\n                title: 'Landing Width',\r\n                dataIndex: 'landingWidth',\r\n                key: 'landingWidth',\r\n                render: (landingWidth, record) => (<Input value={landingWidth} onChange={(value) => handleFlightsTableInputChange(value.target.value, record, 'landingWidth')} />)\r\n            },\r\n            {\r\n                title: 'Landing Length',\r\n                dataIndex: 'landingLength',\r\n                key: 'landingLength',\r\n                render: (landingLength, record) => (<Input value={landingLength} onChange={(value) => handleFlightsTableInputChange(value.target.value, record, 'landingLength')} />)\r\n            },\r\n            {\r\n                title: 'Dog Leg',\r\n                dataIndex: 'dogLegLength',\r\n                key: 'dogLegLength',\r\n                render: (dogLegLength, record) => (<Input value={dogLegLength} onChange={(value) => handleFlightsTableInputChange(value.target.value, record, 'dogLegLength')} />)\r\n                //render: (isDogLeg) => (<span>{isDogLeg}</span>)\r\n            },\r\n            {\r\n                title: 'Risers',\r\n                dataIndex: 'risers',\r\n                key: 'risers',\r\n\r\n            },\r\n            {\r\n                title: 'Rise Height',\r\n                dataIndex: 'riseHeight',\r\n                key: 'riseHeight',\r\n                render: (riseHeight) => fracFormatter(riseHeight / 12)\r\n            },\r\n            {\r\n                title: 'Riser Height',\r\n                dataIndex: 'riserHeight',\r\n                key: 'riserHeight',\r\n                render: (riserHeight) => fracFormatter(riserHeight / 12)\r\n            },\r\n            {\r\n                title: 'Run Length',\r\n                dataIndex: 'runLength',\r\n                key: 'runLength',\r\n                render: (runLength) => fracFormatter(runLength / 12)\r\n            }]}\r\n            expandedRowRender={record => editFlight(record)} />\r\n            <Button type=\"primary\" block onClick={handleUpdate}>Enter</Button></div>\r\n    );\r\n}\r\n\r\nexport default ReviewFlights","export const isInFeetOrInches = (input) => {\r\n    if (input && input.includes != undefined) {\r\n        return (input.includes('\"') || input.includes('\\''));\r\n    }\r\n    return false;\r\n}","import React from 'react';\r\nimport { InputNumber, Input, Button, Form, Checkbox, Collapse, Select, Radio, Switch, Popover } from 'antd';\r\nimport { isInFeetOrInches } from '../Util/validators';\r\nimport * as constants from '../Util/constants';\r\nimport { formItemLayout, radioStyle } from '../Util/styles';\r\nimport SelectBox from '../components/SelectBox';\r\n\r\nconst CollectTopData = (props) => {\r\n\r\n\r\n\r\n    const { handleStairInputChange, activeStair, handleStairValueUpdate, handleStairDirectionCheck, handleStoryEnter, handleLevelSelectionUpdate } = props;\r\n    const Panel = Collapse.Panel;\r\n    const renderSelect = (options, label, key, callBack, disabledItems = []) => {\r\n        const items = options.map(option => <Select.Option value={option.key} key={option.key} disabled={disabledItems.includes(option.key)}>{option.label}</Select.Option>);\r\n        return (\r\n            <Form.Item label={label}  {...formItemLayout} >\r\n                <Select\r\n                    value={activeStair[key]}\r\n                    style={{ width: 200 }}\r\n                    onChange={(value) => callBack(key, value)}\r\n                    key={key}>\r\n                    {items}\r\n                </Select>\r\n            </Form.Item >\r\n        )\r\n    };\r\n\r\n//This doesn't work because ids are not sequential with elevations\r\n    const floorLevelSelections = activeStair.floorLevels\r\n        // .slice(\r\n        //     activeStair.floorLevels.findIndex(x => x.id === activeStair.bottomLevelId) + 1,\r\n        //     activeStair.floorLevels.findIndex(x => x.id === activeStair.topLevelId)\r\n        // )\r\n        .map(level => ({ value: level.id, label: level.levelName }));\r\n\r\n        //TODO:  This is a placeholder defintion.  Make dynamic\r\n        const itemDefintion = (\r\n            <div >\r\n                <p>Stair width is the distance from inside of stringer to inside of stringer.  Typically, 3/8 plater stringers are used, making the overall stair width 3/4\" wider.</p>\r\n            </div>\r\n        )\r\n        const customLabel = (<Popover placement=\"top\" title=\"Stair Width\" content={itemDefintion} trigger=\"click\" arrowPointAtCenter ><span style={{textDecoration: \"underline dashed #1890ff\"}}>Stair Width</span></Popover>)\r\n\r\n\r\n    return (\r\n        <Form layout=\"horizontal\">\r\n            <Form.Item label=\"StairName:\"  {...formItemLayout}>\r\n                {/* TODO: get list of names from app and ensure this is unique */}\r\n                <Input onChange={handleStairInputChange} name=\"stairName\" value={activeStair.stairName} style={{ width: 200 }} />\r\n            </Form.Item>\r\n            {/* TODO:  Make sure width will work with stair to edge distance and alert user if it doesn't */}\r\n           \r\n            <Form.Item\r\n                label={customLabel}\r\n                {...formItemLayout}\r\n                \r\n                help={constants.feetOrInches} >\r\n                <Input onChange={handleStairInputChange} name=\"stairWidth\" value={activeStair.stairWidth} style={{ width: 200 }} />\r\n            </Form.Item>\r\n            \r\n            <SelectBox\r\n                value={activeStair.bottomLevelId}\r\n                options={activeStair.floorLevels.map(level => ({ key: level.id, label: level.levelName }))}\r\n                label=\"Select Bottom Level\"\r\n                stateKey=\"bottomLevelId\"\r\n                callBack={handleLevelSelectionUpdate}\r\n            />\r\n\r\n            {/* {renderSelect(activeStair.floorLevels.map(level => ({ key: level.id, label: level.levelName })), \"Select Bottom Level\", \"bottomLevelId\", handleLevelSelectionUpdate)} */}\r\n            {renderSelect(activeStair.floorLevels.map(level => ({ key: level.id, label: level.levelName })), \"Select Top Level\", \"topLevelId\", handleLevelSelectionUpdate)}\r\n            {activeStair.bottomLevelId && activeStair.topLevelId &&\r\n                <Form.Item\r\n                    label=\"Landing Elevations Aligned With These Levels:\" {...formItemLayout}\r\n                >\r\n                    <Checkbox.Group options={floorLevelSelections} onChange={(value) => handleStairValueUpdate('landingsLevels', value)} value={activeStair.landingsLevels} />\r\n                </Form.Item>\r\n            }\r\n            <Form.Item\r\n                label=\"Stair to Edge of Landing Offset :\"\r\n                {...formItemLayout}>\r\n                <Input onChange={handleStairInputChange} name=\"stairEdgeOffset\" value={activeStair.stairEdgeOffset} style={{ width: 200 }} />\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Landing Platforms At Floor Levels\"\r\n                {...formItemLayout}>\r\n                <Switch defaultChecked onChange={(value) => handleStairValueUpdate(\"landingsAtFloorLevels\", value)} checked={activeStair.landingsAtFloorLevels} />\r\n            </Form.Item>\r\n            {activeStair.landingsAtFloorLevels &&\r\n                <Form.Item label=\"Top of Landing Elevation Delta At Floor Levels:\" {...formItemLayout}>\r\n                    <Input onChange={handleStairInputChange} name=\"landingElevationDelta\" value={activeStair.landingElevationDelta} style={{ width: 200 }} />\r\n                </Form.Item>\r\n            }\r\n            {activeStair.landingsAtFloorLevels && renderSelect(constants.landingSupportTypes, \"Landing Supports At Floor Levels\", \"floorLevelLandingSupportType\", handleStairValueUpdate)}\r\n            {/* {renderSelect(landingSupportTypes, \"Landing Supports At Intermediate Levels\", \"intermediateLandingSupportType\", handleStairValueUpdate)} */}\r\n\r\n            <SelectBox\r\n                value={activeStair.intermediateLandingSupportType}\r\n                options={constants.landingSupportTypes}\r\n                label=\"Landing Supports At Intermediate Levels\"\r\n                stateKey=\"intermediateLandingSupportType\"\r\n                callBack={handleStairValueUpdate}\r\n            />\r\n\r\n            {/* TODO: Imaplement length and delta handling */}\r\n            <Form.Item label=\"Stairwell Length:\"  {...formItemLayout}>\r\n                <Radio.Group onChange={handleStairInputChange} value={activeStair.stairwellLengthHandling} name=\"stairwellLengthHandling\">\r\n                    <Radio style={radioStyle} value={\"minimum\"}>Minimum Possible</Radio>\r\n                    <Radio style={radioStyle} value={\"predetermined\"}>Predetermined\r\n                    </Radio>\r\n                </Radio.Group>\r\n                {activeStair.stairwellLengthHandling === \"predetermined\" &&\r\n                    <span>\r\n                        <Form.Item\r\n                            label=\"Stairwell Length:\"\r\n                            validateStatus={isInFeetOrInches(activeStair.predeterminedStairwellLength) ? \"\" : \"error\"}\r\n                            help={constants.feetOrInches}>\r\n                            <Input onChange={handleStairInputChange} name=\"predeterminedStairwellLength\" value={activeStair.predeterminedStairwellLength} style={{ width: 200 }} />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"How to handle excess landing lengths:\">\r\n                            <Radio.Group onChange={handleStairInputChange} value={activeStair.stairwellExcessLengthHandling} name=\"stairwellExcessLengthHandling\">\r\n                                <Radio style={radioStyle} value={\"increaseMidStoryLandings\"}>Increase Odd Landing Widths</Radio>\r\n                                <Radio style={radioStyle} value={\"increaseStoryLandings\"}>Increase Even Landing Widths</Radio>\r\n                                <Radio style={radioStyle} value={\"equalIncreaseLandings\"}>Increase All Landings Equally</Radio>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n\r\n                    </span>}\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Stairwell Width:\"  {...formItemLayout}>\r\n                <Radio.Group onChange={handleStairInputChange} value={activeStair.stairwellWidthHandling} name=\"stairwellWidthHandling\">\r\n                    <Radio style={radioStyle} value={\"minimum\"}>Minimum Possible</Radio>\r\n                    <Radio style={radioStyle} value={\"predetermined\"}>Predetermined\r\n                    </Radio>\r\n                </Radio.Group>\r\n                {activeStair.stairwellWidthHandling === \"predetermined\" &&\r\n                    <span>\r\n                        <Form.Item\r\n                            label=\"Stairwell Width:\"\r\n                            validateStatus={isInFeetOrInches(activeStair.stairwellWidthF) ? \"\" : \"error\"}\r\n                            help={constants.feetOrInches}>\r\n                            <Input onChange={handleStairInputChange} name=\"stairwellWidthF\" value={activeStair.stairwellWidthF} style={{ width: 200 }} />\r\n                        </Form.Item>\r\n                    </span>}\r\n            </Form.Item>\r\n\r\n\r\n            {/* //{renderLevelSelect(true)} */}\r\n\r\n            {renderSelect(constants.railingOptions, \"Guardrail Style: \", \"railingPanelType\", handleStairValueUpdate)}\r\n\r\n            <SelectBox\r\n                value={activeStair.interiorRailType}\r\n                options={constants.railLocationTypes}\r\n                label=\"Stair Interior Railing Type: \"\r\n                stateKey=\"interiorRailType\"\r\n                callBack={handleStairValueUpdate}\r\n            />\r\n            <SelectBox\r\n                value={activeStair.exteriorRailType}\r\n                options={constants.railLocationTypes}\r\n                label=\"Stair Exterior Railing Type: \"\r\n                stateKey=\"exteriorRailType\"\r\n                callBack={handleStairValueUpdate}\r\n            />\r\n\r\n            <Form.Item {...formItemLayout} label=\"Clockwise Rotation on Ascent:\">\r\n                <Checkbox onChange={handleStairDirectionCheck} checked={!activeStair.isClockwise}></Checkbox>\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Max Flight Rise:\" {...formItemLayout}\r\n                validateStatus={isInFeetOrInches(activeStair.maxFlightRise) ? \"\" : \"error\"}\r\n                help={constants.feetOrInches}\r\n            >\r\n                <Input onChange={handleStairInputChange} name=\"maxFlightRise\" value={activeStair.maxFlightRise} style={{ width: 200 }} />\r\n            </Form.Item>\r\n            <Button onClick={handleStoryEnter} type=\"primary\" block>Enter</Button>\r\n\r\n            <Collapse accordion onChange={(value) => handleStairValueUpdate(\"storiesDefinedBy\", value)} activeKey={activeStair.storiesDefinedBy}>\r\n                <Panel header=\"Define your own\" key=\"define\">\r\n                    <Form.Item label=\"Number of Stories:\">\r\n                        <InputNumber min={1} max={1000} defaultValue={activeStair.storyCount} onChange={(value) => handleStairValueUpdate(\"storyCount\", value)} name=\"storyCount\" value={activeStair.storyCount} />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Default Story Height:\"\r\n                        validateStatus={isInFeetOrInches(activeStair.defaultStoryHeight) ? \"\" : \"error\"}\r\n                        help={constants.feetOrInches}>\r\n                        <Input placeholder=\"12' 6 1/2\" onChange={handleStairInputChange} name=\"defaultStoryHeight\" value={activeStair.defaultStoryHeight} />\r\n                    </Form.Item>\r\n                    <Button onClick={handleStoryEnter} type=\"primary\">Enter</Button>\r\n                </Panel>\r\n            </Collapse>\r\n\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default CollectTopData","import React from 'react';\r\nimport { InputNumber, Input, Button, Table, Icon, Form, Divider, Tag } from 'antd';\r\n//import { parse } from 'footinch';\r\nimport { parse } from '../Util/parse';\r\nimport { format } from '../Util/format';\r\nimport { formItemLayoutInline } from '../Util/styles'\r\n//floor levels are unique flights becuase they generally allow egress in and out of stair.  We use leels to anchor the stair heights and define the number of intermediate landings.\r\nconst CollectFloorLevelData = (props) => {\r\n    const { activeStair, addStory, handleElevationChange, handleChangeStoryFlightCount, handleLandingElevationDeltaChange, checkFlighGeometry, handleStepClick } = props;\r\n    const fracFormatter = (value) => format.FT.to.FT.IN.FRAC(32)(value);\r\n\r\n    let sortedLevels = Object.assign([], activeStair.stories)\r\n        .sort((a, b) => parse.F(a.elevation) - parse.F(b.elevation));\r\n\r\n    const renderFlights = (record) => {\r\n        const storyId = record.storyId;\r\n        const storyFlights = activeStair.flights.filter(x => x.story === storyId);\r\n        const flightRows = storyFlights.map((flight, index) => {\r\n            const isBottomFlight = (index === 0);\r\n            const isTopFlight = (index === storyFlights.length - 1);\r\n            \r\n            return (\r\n                <span key={index}>\r\n\r\n                    <h3>{flight.name}</h3>\r\n\r\n                    <Form.Item label=\"Top Elevation:\"  >\r\n                        {/* TODO: get list of names from app and ensure this is unique */}\r\n                        <Input onChange={(value) => handleElevationChange(flight.flightId, value.target.value, true)} name=\"topElevation\" value={flight.topElevation} style={{ width: 200 }} disabled={isTopFlight} />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Bottom Elevation:\"  >\r\n                        {/* TODO: get list of names from app and ensure this is unique */}\r\n                        <Input onChange={(value) => handleElevationChange(flight.flightId, value.target.value, false)} name=\"bottomElevation\" value={flight.bottomElevation} style={{ width: 200 }} disabled={isBottomFlight} />\r\n                    </Form.Item>\r\n\r\n                    <Divider />\r\n                </span>\r\n            );\r\n        })\r\n        return (\r\n            <Form layout=\"inline\">\r\n                {flightRows}\r\n            </Form>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <span>\r\n\r\n            <Table dataSource={sortedLevels} pagination={false} rowKey='storyId'\r\n                columns={[{\r\n                    title: 'Story',\r\n                    dataIndex: 'storyName',\r\n                    key: 'storyName',\r\n                    //render: (storyName, record) => (<Input value={storyName} onChange={(value) => handleTableInputChange(value, record, 'storyName')} />)\r\n                },\r\n                {\r\n                    title: 'Elevation',\r\n                    dataIndex: 'elevation',\r\n                    key: 'elevation',\r\n                    //render: (elevation, record) => (<Input placeholder=\"Elevation\" value={elevation} onChange={(value) => handleTableInputChange(value, record, 'elevation')} />)\r\n                },\r\n                {\r\n                    title: 'Landing Elevation Delta',\r\n                    dataIndex: 'landingElevationDelta',\r\n                    key: 'landingElevationDelta',\r\n                    render: (landingElevationDelta, record) => (<Input placeholder=\"\" value={landingElevationDelta} onChange={(value) => handleLandingElevationDeltaChange(record.storyId, value.target.value)} onBlur={checkFlighGeometry} />)\r\n                },\r\n                {\r\n                    title: 'Flights',\r\n                    dataIndex: 'flights',\r\n                    key: 'flights',\r\n                    render: (flights, record) => (<InputNumber min={0} max={1000} value={flights} onChange={(value) => handleChangeStoryFlightCount(record.storyId, value)} />)\r\n                }]}\r\n                expandedRowRender={record => renderFlights(record)}\r\n                footer={() => <Button onClick={addStory} type=\"dashed\"><Icon type=\"plus\" />Add Level</Button>}\r\n            />\r\n\r\n\r\n            {activeStair.stories.length > 0 &&\r\n                <Button onClick={handleStepClick} type=\"primary\" block>Proceed to Flight Review</Button>\r\n            }\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default CollectFloorLevelData\r\n","import _sortBy from 'lodash/sortBy';\r\nimport { parse } from '../Util/parse';\r\nimport { format } from '../Util/format';\r\n\r\n// TODO:  We are only increasing odd and even landings.  Need to update to update on actual story levels when there could be 3 or more flights in a landing\r\nexport const handleExcessLandingWidths = (stair) => {\r\n\r\n    let sortedFlights = Object.assign([], stair.flights)\r\n        .sort((a, b) => a.topElevation - b.topElevation);\r\n\r\n    const excessLandingDelta = parse.F(stair.predeterminedStairwellLength) * 12 - stair.stairLength;\r\n    console.log('excess is ' + excessLandingDelta)\r\n    for (let i = 0; i < sortedFlights.length; i++) {\r\n        let flight = sortedFlights[i];\r\n        switch (stair.stairwellExcessLengthHandling) {\r\n            case \"increaseMidStoryLandings\":\r\n                if (i % 2 == 0) {\r\n                    flight.landingWidth = flight.landingWidth + excessLandingDelta;\r\n                }\r\n                break;\r\n            case \"increaseStoryLandings\":\r\n                if (!(i % 2 == 0)) {\r\n                    flight.landingWidth = flight.landingWidth + excessLandingDelta;\r\n                }\r\n                break;\r\n            case \"equalIncreaseLandings\": flight.landingWidth = flight.landingWidth + .5 * excessLandingDelta;\r\n        }\r\n    }\r\n    return sortedFlights\r\n}\r\n\r\n\r\nexport const resequenceFlights = (flights) => {\r\n    let sortedFlights = Object.assign([], flights)\r\n        .sort((a, b) => a.topElevation - b.topElevation);\r\n    sortedFlights.map((x, index) => {\r\n        x.flightId = index;\r\n    });\r\n    return sortedFlights;\r\n}\r\n\r\nexport const checkFlightGeometry = (flights, stair) => {\r\n\r\n    const sortedFlights = Object.assign([], flights)\r\n        .sort((a, b) => a.topElevation - b.topElevation);\r\n    let invalidFlights = [];\r\n    sortedFlights.map((flight, index) => {\r\n        if (flight.flightId === 0) {\r\n            if (flight.runLength + flight.landingWidth + parse.F(stair.stairWidth) * 12 > stair.stairLength) invalidFlights.push(flight.flightId);\r\n        }\r\n        else {\r\n            if (flight.runLength + flight.landingWidth + flights[index - 1].landingWidth > stair.stairLength) invalidFlights.push(flight.flightId);\r\n        }\r\n    })\r\n\r\n    return invalidFlights;\r\n}\r\n\r\nexport const calculateStoryFlights = (story, storyHeight, idStart, stair) => {\r\n    let flights = [];\r\n    let flightElevation = parse.F(story.elevation) + parse.F(story.landingElevationDelta);\r\n\r\n    // calculate total story risers\r\n    const storyRisers = Math.ceil(storyHeight / stair.minimumRiserHeight);\r\n    const bottomRunRisers = Math.ceil(storyRisers / story.flights);\r\n    const upperRunRisers = story.flights > 1 ? Math.ceil((storyRisers - bottomRunRisers) / (story.flights - 1)) : storyRisers - bottomRunRisers;\r\n    const flightRiserHeight = storyHeight / (bottomRunRisers + upperRunRisers * (story.flights - 1));\r\n    // if the number of risers/number of flights is odd, first flight will have an additional riser.  Otherwise, all are the same.\r\n    // calculate riser heights\r\n    // calculate run lengths\r\n    // identify dog legs\r\n    // console.log(`risers: ${storyRisers}, bottom run risers ${bottomRunRisers}, upper run risers ${upperRunRisers}`)\r\n\r\n    for (let i = 0; i < story.flights; i++) {\r\n        const risers = (i === 0) ? bottomRunRisers : upperRunRisers;\r\n        const isDogLeg = (i !== 0) && !(storyRisers % 2 == 0);\r\n        const dogLegLength = isDogLeg ? 11 : 0;\r\n        const runLength = (risers - 1) * stair.treadWidth;\r\n        flights.push({\r\n            flightId: idStart,\r\n            story: story.storyId,\r\n            name: `story${story.storyId}-flight${(i + 1)}`,\r\n            isClockwise: stair.isClockwise,\r\n            isBottomStair: (idStart === 0),\r\n            isTopStair: (i === story.flights - 1),\r\n            risers,\r\n            riserHeight: flightRiserHeight,\r\n            riseHeight: risers * flightRiserHeight,\r\n            runLength,\r\n            isDogLeg,\r\n            dogLegLength,\r\n            //lengths of landings are 2* the stair width + 6\" or the specified predetermined amount\r\n            landingLength: stair.stairwellWidthHandling === \"predetermined\" ? parse.F(stair.stairwellWidthF) * 12 : (parse.F(stair.stairWidth) * 12) * 2 + 12,\r\n            stairWidth: parse.F(stair.stairWidth) * 12,\r\n            exteriorRailType: stair.exteriorRailType,\r\n            interiorRailType: stair.interiorRailType,\r\n            railingPanelType: stair.railingPanelType,\r\n            //landingElevationDelta: stair.landingElevationDelta,\r\n            // TODO:  Ensure landing elevation delta is not cumulative\r\n            bottomElevation: flightElevation,\r\n            //if this is the top flight of a story adjust for landingElevationDelta\r\n            topElevation: flightElevation + ((risers * flightRiserHeight) / 12),// - (i === (story.flights - 1) ? parse.F(story.landingElevationDelta) : 0),\r\n            //todo:  update add in app to look at the story object for this and remove it below\r\n            landingElevationDelta: parse.F(story.landingElevationDelta),\r\n            landingSupportType: (i === 0) ? stair.floorLevelLandingSupportType : stair.intermediateLandingSupportType,\r\n            hasLanding: !(!stair.landingsAtFloorLevels && i === (story.flights - 1)),\r\n            stairEdgeOffset: stair.stairEdgeOffset\r\n        });\r\n        flightElevation = flightElevation + ((risers * flightRiserHeight) / 12);\r\n        idStart++;\r\n    }\r\n\r\n    return flights;\r\n}\r\n\r\n\r\nexport const calculateFlightsFromStories = (stories, stair) => {\r\n    let flights = [];\r\n    let flightId = 0;\r\n    //TODO: Add null protection\r\n    _sortBy(stories, 'storyId').map((x, index) => {\r\n        // calculate story height\r\n        let storyHeight = (index < stories.length - 1) ? parse.F(stories[index + 1].elevation) * 12 - parse.F(stories[index].elevation) * 12 : 0;\r\n        const elevationDelta = (index < stories.length - 1) ? parse.F(stories[index + 1].landingElevationDelta) * 12 - parse.F(stories[index].landingElevationDelta\r\n        ) * 12 : 0;\r\n        storyHeight = storyHeight - elevationDelta;\r\n        let storyFlights = calculateStoryFlights(x, storyHeight, flightId, stair);\r\n        flights = [...flights, ...storyFlights]\r\n        flightId = flightId + storyFlights.length;\r\n    })\r\n    return flights;\r\n};\r\n\r\nconst fixDoubleDogLegs = (flights) => {\r\n    let sortedFlights = Object.assign([], flights)\r\n        .sort((a, b) => a.topElevation - b.topElevation);\r\n    sortedFlights.map((x, index) => {\r\n        if (index !== 0 && index !== sortedFlights.length - 1) {\r\n            const nextFlight = sortedFlights[index + 1];\r\n            if (x.dogLegLength !== 0 && nextFlight.dogLegLength !== 0) {\r\n                const difference = Math.min(x.dogLegLength, nextFlight.dogLegLength);\r\n                //const difference = x.dogLegLength > nextFlight.dogLegLength ? x.dogLegLength - nextFlight.dogLegLength : nextFlight.dogLegLength -x.dogLegLength;\r\n                const thisDogLeg = x.dogLegLength - difference;\r\n                const nextDogLeg = nextFlight.dogLegLength - difference\r\n                x.landingWidth = x.landingWidth + difference;\r\n                x.dogLegLength = thisDogLeg;\r\n                x.isDogLeg = thisDogLeg > 0;\r\n                nextFlight.dogLegLength = nextDogLeg;\r\n                nextFlight.isDogLeg = nextDogLeg > 0;\r\n            }\r\n        }\r\n        // step 5:  todo: iterate from second stair up.  If the ascending and descending stairs both have dog legs, shorten them both by the shorter dog leg and extend landing by that amount\r\n    });\r\n    return sortedFlights;\r\n}\r\n\r\nexport const calculateStairDimensionsWithDogLegs = (flights, stair) => {\r\n\r\n    // using the minimum landing width and dogleg approach.\r\n    // step 1: calculate all run lengths based on ladning elevations (use calculateStairDimensionsFromFlightElevations)\r\n    // step 2:  find longest run and calculate stair width as 2Xstairwidth+longestRun.\r\n    const maxRunLength = Math.max(...flights.map(x => x.runLength), 0);\r\n    const stairWellLength = maxRunLength + 2 * parse.F(stair.stairWidth) * 12;\r\n    //const maxFlightIndex = flights.findIndex(flights => flights.runLength === maxRunLength);\r\n    let sortedFlights = Object.assign([], flights)\r\n        .sort((a, b) => a.topElevation - b.topElevation);\r\n\r\n    sortedFlights.map((x, index) => {\r\n        x.landingWidth = parse.F(stair.stairWidth) * 12;\r\n        // step 3: from bottom, first run is not a dog leg.\r\n        if (index === 0) {\r\n            x.isDogLeg = false;\r\n            x.dogLegLength = 0;\r\n        } else {\r\n            // step 4: iterate from second stair up by adding dog legs to any excess over the 2Xminimum stair width - stair run\r\n            const dogLegLength = stairWellLength - (2 * parse.F(stair.stairWidth) * 12 + x.runLength);\r\n            x.dogLegLength = dogLegLength;\r\n            x.isDogLeg = dogLegLength > 0;\r\n        }\r\n    })\r\n    // step 5:  todo: iterate from second stair up.  If the ascending and descind stairs both have dog legs, shorten them both by the shorter dog leg and extend landing by that amount\r\n    return fixDoubleDogLegs(sortedFlights);\r\n};\r\n\r\n\r\n// This is being used once flights are initially calculated\r\nexport const calculateStairDimensionsFromFlightElevations = (flights, stair) => {\r\n    let sortedFlights = Object.assign([], flights)\r\n        .sort((a, b) => a.topElevation - b.topElevation);\r\n\r\n    sortedFlights.map((x, index) => {\r\n        const flightHeight = 12 * x.topElevation - 12 * x.bottomElevation;\r\n        const flightRisers = Math.ceil(flightHeight / stair.minimumRiserHeight);\r\n        const flightRiserHeight = flightHeight / flightRisers;\r\n        const runLength = (flightRisers - 1) * stair.treadWidth;\r\n        x.risers = flightRisers;\r\n        x.riserHeight = flightRiserHeight;\r\n        x.riseHeight = flightRisers * flightRiserHeight;\r\n        x.runLength = runLength;\r\n        //updatedFlights.push(x);\r\n    })\r\n    return calculateStairDimensionsWithDogLegs(sortedFlights, stair);\r\n}","import React from 'react';\r\nimport { Button, } from 'antd';\r\nimport SelectBox from '../components/SelectBox';\r\n\r\nconst PlaceStair = (props) => {\r\n    const { activeStair, handleWindowClose, handleStairValueUpdate } = props;\r\n    return (\r\n        //Might need to add:  These floor levels do not have corresponding levels and plan view on the model.  Do you wish to create them?\r\n        <div>\r\n            {!activeStair.isEditing &&\r\n                <SelectBox\r\n                    value={activeStair.planLevel}\r\n                    options={activeStair.planLevels.map(level => ({ key: level, label: level }))}\r\n                    label=\"Select a plan level to place stair\"\r\n                    stateKey=\"planLevel\"\r\n                    callBack={handleStairValueUpdate}\r\n                />\r\n            }\r\n            <Button onClick={handleWindowClose} type=\"primary\" block>{activeStair.isEditing ? \"Update \" : \"Place \"}Stair</Button>\r\n        </div>\r\n    )\r\n}\r\nexport default PlaceStair;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateCurrentStairwell, getFloorLevels, getFloorPlans } from '../actions/stairsActions';\r\nimport {getProjectGuid} from '../actions/projectActions';\r\nimport { InputNumber, Input, Button, Table, Row, Spin, Card, Steps } from 'antd';\r\nimport ReviewFlights from './ReviewFlights';\r\nimport { parse } from '../Util/parse';\r\nimport { format } from '../Util/format';\r\nimport _sortBy from 'lodash/sortBy';\r\nimport CollectTopData from './CollectTopData';\r\nimport CollectFloorLevelData from './CollectFloorLevelData';\r\nimport { calculateFlightsFromStories, calculateStairDimensionsWithDogLegs, calculateStairDimensionsFromFlightElevations, calculateStoryFlights, resequenceFlights, checkFlightGeometry, handleExcessLandingWidths } from '../Util/stairCalcs';\r\nimport PlaceStair from './PlaceStair';\r\n\r\nclass StairwellLayoutContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleStairValueUpdate = this.handleStairValueUpdate.bind(this);\r\n    this.handleStoryEnter = this.handleStoryEnter.bind(this);\r\n    this.handleFlightsTableInputChange = this.handleFlightsTableInputChange.bind(this);\r\n    this.handleTableInputChange = this.handleTableInputChange.bind(this);\r\n    this.calculateStairDims = this.calculateStairDims.bind(this);\r\n    this.calculateFlightDims = this.calculateFlightDims.bind(this);\r\n    this.handleStairInputChange = this.handleStairInputChange.bind(this);\r\n    this.handleStepClick = this.handleStepClick.bind(this);\r\n    this.handleWindowClose = this.handleWindowClose.bind(this);\r\n    this.handleStairDirectionCheck = this.handleStairDirectionCheck.bind(this);\r\n    this.addStory = this.addStory.bind(this);\r\n    this.handleAddStoryToggle = this.handleAddStoryToggle.bind(this);\r\n    this.handleLevelSelectionUpdate = this.handleLevelSelectionUpdate.bind(this);\r\n    this.handleElevationChange = this.handleElevationChange.bind(this);\r\n    this.handleChangeStoryFlightCount = this.handleChangeStoryFlightCount.bind(this);\r\n    this.handleLandingElevationDeltaChange = this.handleLandingElevationDeltaChange.bind(this);\r\n    this.checkFlighGeometry = this.checkFlighGeometry.bind(this);\r\n\r\n  }\r\n  componentDidMount() {\r\n    // this allow some time for the levels to be loaded onto the window element before loading into state\r\n    setTimeout(() => {\r\n      this.props.getFloorLevels();\r\n      this.props.getFloorPlans();\r\n      this.props.getProjectGuid();\r\n    }, 100);\r\n  }\r\n\r\n  checkFlighGeometry() {\r\n    const invalidFlights = checkFlightGeometry(this.props.activeStair.flights, this.props.activeStair)\r\n    if (invalidFlights.length > 0) console.log(\"yo!  bad bad bad\" + JSON.stringify(invalidFlights));\r\n  }\r\n\r\n  handleLandingElevationDeltaChange(storyId, delta) {\r\n    //>will need to recalculate the current story and the one below if it one exists\r\n    //>calcaulate currentstory height\r\n    //>elevation of level above current story - current story elevation\r\n    //>adjust for deltas:  subtract height calcualction by sum of detlas from current story (delta passed to func) and one above it (if it exists)\r\n\r\n    //>recalcaulte story below if it exists\r\n    //>calculate story below height\r\n    //>height of story below is equal to current story elevation minus elevation below\r\n    //>adjust fro deltas:  subtract height calculation by sum of deltas from current story and one below it.\r\n\r\n    //>remove the flights belonging to the the two stories in copy of state\r\n    //>merge in recalcualted flightsd\r\n\r\n    const stories = this.props.activeStair.stories.sort((a, b) => parse.F(a.elevation) - parse.F(b.elevation)).slice();\r\n    const storyIndex = this.props.activeStair.stories.findIndex(story => story.storyId === storyId);\r\n    const currentStory = stories[storyIndex];\r\n    currentStory.landingElevationDelta = delta;\r\n\r\n    let storyHeight = (storyIndex < stories.length - 1) ? parse.F(stories[storyIndex + 1].elevation) * 12 - parse.F(stories[storyIndex].elevation) * 12 : 0;\r\n    const elevationDelta = (storyIndex < stories.length - 1) ? parse.F(delta) * 12 - parse.F(stories[storyIndex + 1].landingElevationDelta) * 12 : 0;\r\n\r\n    storyHeight = storyHeight - elevationDelta;\r\n\r\n    const existingStoryFlights = this.props.activeStair.flights.filter(x => x.story === storyId);\r\n    const startingFlightId = Math.min(...existingStoryFlights.map(x => x.flightId));\r\n    const updatedStoryFlights = calculateStoryFlights(currentStory, storyHeight, startingFlightId, this.props.activeStair);\r\n\r\n    let adjacentUpdatedStoryFlights;\r\n    //only if not bottom\r\n    if (storyId !== 1) {\r\n      const adjacentStory = stories[storyIndex - 1]\r\n      let adjacentStoryHeight = ((storyIndex < stories.length - 1) ? parse.F(stories[storyIndex].elevation) * 12 - parse.F(adjacentStory.elevation) * 12 : 0);\r\n      const existingAdjacentStoryFlights = this.props.activeStair.flights.filter(x => x.story === (storyId - 1));\r\n      const adjacentStartingFlightId = Math.min(...existingAdjacentStoryFlights.map(x => x.flightId));\r\n      const adjacentElevationDelta = (storyIndex < stories.length - 1) ? parse.F(delta) * 12 - parse.F(stories[storyIndex - 1].landingElevationDelta) * 12 : 0;\r\n      adjacentStoryHeight = adjacentStoryHeight + adjacentElevationDelta;\r\n      adjacentUpdatedStoryFlights = calculateStoryFlights(adjacentStory, adjacentStoryHeight, adjacentStartingFlightId, this.props.activeStair);\r\n    }\r\n    let updatedFlights = [...this.props.activeStair.flights.filter(x => x.story !== storyId), ...updatedStoryFlights];\r\n\r\n    if (storyId !== 1) updatedFlights = [...updatedFlights.filter(x => x.story !== (storyId - 1)), ...adjacentUpdatedStoryFlights];\r\n\r\n    //const updatedStair = { ...this.props.activeStair, flights: calculateStairDimensionsWithDogLegs(resequenceFlights(updatedFlights), this.props.activeStair) };\r\n    this.calculateFlightDims(calculateStairDimensionsWithDogLegs(resequenceFlights(updatedFlights), this.props.activeStair));\r\n\r\n    //this.props.updateCurrentStairwell(updatedStair);\r\n  }\r\n\r\n  handleChangeStoryFlightCount(storyId, flightCount) {\r\n\r\n    const stories = this.props.activeStair.stories.sort((a, b) => parse.F(a.elevation) - parse.F(b.elevation)).slice();\r\n    const storyIndex = this.props.activeStair.stories.findIndex(story => story.storyId === storyId);\r\n\r\n    let updatedStory = { ...stories[storyIndex] };\r\n    updatedStory.flights = flightCount;\r\n    let storyHeight = (storyIndex < stories.length - 1) ? parse.F(stories[storyIndex + 1].elevation) * 12 - parse.F(updatedStory.elevation) * 12 : 0;\r\n\r\n    const elevationDelta = (storyIndex < stories.length - 1) ? (parse.F(stories[storyIndex].landingElevationDelta)) * 12 - (parse.F(stories[storyIndex + 1].landingElevationDelta)) * 12 : 0;\r\n    storyHeight = storyHeight - elevationDelta;\r\n\r\n    stories.splice(storyIndex, 1);\r\n    const updatedStories = [...stories, updatedStory];\r\n    const existingStoryFlights = this.props.activeStair.flights.filter(x => x.story === storyId);\r\n    const startingFlightId = Math.min(...existingStoryFlights.map(x => x.flightId), 0);\r\n    // TODO:  All flight ids will need to be resequenced when adding flights\r\n    const updatedStoryFlights = calculateStoryFlights(updatedStory, storyHeight, startingFlightId, this.props.activeStair);\r\n    let updatedFlights = [...this.props.activeStair.flights.filter(x => x.story !== storyId), ...updatedStoryFlights];\r\n    const updatedStair = { ...this.props.activeStair, stories: updatedStories }\r\n    this.calculateFlightDims(calculateStairDimensionsWithDogLegs(resequenceFlights(updatedFlights), updatedStair), updatedStair);\r\n  }\r\n\r\n  handleElevationChange(flightId, newElevation, isTop) {\r\n    //TODO ensure flight id is in the correct order when adding new flights.  They will need to be recalculated above where they are inserted.\r\n    //\r\n    let sortedFlights = Object.assign([], this.props.activeStair.flights)\r\n      .sort((a, b) => a.flightId - b.flightId);\r\n\r\n    const flightIndex = sortedFlights.findIndex(x => x.flightId === flightId);\r\n    // if changing the top, the bottom should be anchor and vice versa\r\n    const adjacentFlightIndex = flightIndex + (isTop ? 1 : -1);\r\n    const flightField = isTop ? \"topElevation\" : \"bottomElevation\";\r\n    const adjacentFlightField = isTop ? \"bottomElevation\" : \"topElevation\";\r\n    sortedFlights[flightIndex][flightField] = newElevation;\r\n    sortedFlights[adjacentFlightIndex][adjacentFlightField] = newElevation;\r\n    this.props.updateCurrentStairwell({ ...this.props.activeStair, flights: sortedFlights });\r\n  }\r\n\r\n  addStory() {\r\n    const fracFormatter = (value) => format.FT.to.FT.IN.FRAC(32)(value);\r\n    const id = Math.max(...this.props.activeStair.stories.map(o => o.storyId), 0) + 1;\r\n    // find top floor and add flights to it\r\n    const topFloor = this.props.activeStair.stories\r\n      .filter(story => parse.F(story.elevation) ===\r\n        Math.max(...this.props.activeStair.stories.map(o => parse.F(o.elevation), 0)\r\n        ))\r\n    [0];\r\n\r\n    const updatedItem = { ...topFloor, flights: 2 };\r\n\r\n    const updatedStories = Object.assign([],\r\n      //TODO: Make new story height user configurable.  Best handling is to force blur to input and make user set it.\r\n      //TODO:  Also need to only update sort onblur so row doesn't move on user\r\n      [...this.props.activeStair.stories, { storyId: id, storyName: `Added Level ${id}`, elevation: fracFormatter(parse.F(topFloor.elevation) + 12), flights: 0 }],\r\n      { [this.props.activeStair.stories.findIndex(x => x.storyId === topFloor.storyId)]: updatedItem },\r\n    );\r\n\r\n    this.props.updateCurrentStairwell({\r\n      ...this.props.activeStair,\r\n      stories: updatedStories,\r\n      addingStory: !this.props.activeStair.addingStory\r\n    });\r\n  }\r\n\r\n  handleAddStoryToggle() {\r\n    this.props.updateCurrentStairwell({ ...this.props.activeStair, addingStory: !this.props.activeStair.addingStory });\r\n  }\r\n\r\n  handleStairDirectionCheck(e) {\r\n    const updatedStair = { ...this.props.activeStair, isClockwise: !e.target.checked }\r\n    this.props.updateCurrentStairwell(updatedStair);\r\n  }\r\n\r\n  handleStepClick(step) {\r\n    const updatedStair = { ...this.props.activeStair, currentStep: step }\r\n    this.props.updateCurrentStairwell(updatedStair);\r\n  }\r\n\r\n  handleWindowClose() {\r\n    if (window.UiBrowserState) {\r\n      window.UiBrowserState.state = JSON.stringify(this.props.activeStair);\r\n      window.UiBrowserState.closeWindow();\r\n    }\r\n  }\r\n  handleFlightsTableInputChange(value, record, field) {\r\n\r\n\r\n    const updatedItem = { ...record, [field]: value };\r\n\r\n    if (field === \"dogLegLength\") {\r\n      updatedItem.isDogLeg = (value > 0) ? true : false;\r\n    }\r\n    const updatedFlights = Object.assign([],\r\n      this.props.activeStair.flights,\r\n      { [this.props.activeStair.flights.findIndex(x => x.flightId === record.flightId)]: updatedItem }\r\n    );\r\n    const updatedStair = { ...this.props.activeStair, flights: updatedFlights }\r\n    this.props.updateCurrentStairwell(updatedStair);\r\n  }\r\n\r\n  handleTableInputChange(value, record, field) {\r\n    const formValue = (field === \"flights\") ? value : value.target.value;\r\n    const updatedItem = { ...record, [field]: formValue };\r\n    const updatedStories = Object.assign([],\r\n      this.props.activeStair.stories,\r\n      { [this.props.activeStair.stories.findIndex(x => x.storyId === record.storyId)]: updatedItem }\r\n    );\r\n    this.calculateStairDims(updatedStories)\r\n    // let updatedStair = { ...this.props.activeStair, stories: updatedStories }\r\n\r\n    //   // TODO:  Create function for just this story\r\n    //   calculateStairDims\r\n    //   const updatedFlights = calculateFlightsFromStories(updatedStories, updatedStair);\r\n\r\n    //   updatedStair = { ...updatedStair, flights: updatedFlights }\r\n\r\n\r\n    // this.props.updateCurrentStairwell(updatedStair);\r\n  }\r\n\r\n  // handles updates to top and bottom level selections.  Adds levels to landingLevels\r\n  handleLevelSelectionUpdate(key, value) {\r\n    console.log(`key is ${key} and value is ${value}`)\r\n    if ((key === \"topLevelId\" && this.props.activeStair.bottomLevelId) || (key === \"bottomLevelId\" && this.props.activeStair.topLevelId)) {\r\n      const floorLevelsFilteredBySelections = this.props.activeStair.floorLevels.slice(\r\n        this.props.activeStair.floorLevels.findIndex(x => x.id === (key === \"bottomLevelId\" ? value : this.props.activeStair.bottomLevelId)),\r\n        this.props.activeStair.floorLevels.findIndex(x => x.id === (key === \"topLevelId\" ? value : this.props.activeStair.topLevelId)) + 1\r\n      ).map(level => (level.id));\r\n      this.props.updateCurrentStairwell({ ...this.props.activeStair, landingsLevels: floorLevelsFilteredBySelections, [key]: value });\r\n    } else {\r\n      const updatedStair = { ...this.props.activeStair, [key]: value };\r\n      this.props.updateCurrentStairwell(updatedStair);\r\n    }\r\n  }\r\n\r\n\r\n  handleStairValueUpdate(key, value) {\r\n    const updatedStair = { ...this.props.activeStair, [key]: value };\r\n    this.props.updateCurrentStairwell(updatedStair);\r\n  }\r\n\r\n  handleStairInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n    const updatedStair = { ...this.props.activeStair, [name]: value };\r\n    this.props.updateCurrentStairwell(updatedStair);\r\n  }\r\n\r\n  handleStoryEnter() {\r\n    let updatedStair;\r\n    const fracFormatter = (value) => format.FT.to.FT.IN.FRAC(32)(value);\r\n    // TODO: this eventually becomes default handling\r\n    if (this.props.activeStair.storiesDefinedBy === \"import\") {\r\n      if (!window.UiBrowserState) {\r\n        //TODO:  Add better error messaging\r\n        alert('Levels not detected.  Please enter manually')\r\n        return;\r\n      }\r\n      //sort by elevation from lowest to highest\r\n      const floorLevels = this.props.activeStair.floorLevels.filter(level => this.props.activeStair.landingsLevels.includes(level.id));\r\n      let sortedLevels = Object.assign([], floorLevels)\r\n        .sort((a, b) => parseFloat(a.elevation) - parseFloat(b.elevation));\r\n\r\n      sortedLevels = sortedLevels.slice(\r\n        sortedLevels.findIndex(x => x.id == this.props.activeStair.bottomLevelId),\r\n        sortedLevels.findIndex(x => x.id == this.props.activeStair.topLevelId) + 1\r\n      );\r\n\r\n      const selectedLevels = sortedLevels.map((level, i) => ({\r\n        storyId: i + 1,\r\n        modelLevelId: level.id,\r\n        storyName: level.levelName,\r\n        //storyHeight: (i === sortedLevels.length - 1) ? 0: sortedLevels[i+1].elevation - level.elevation,\r\n        elevation: fracFormatter(level.elevation),\r\n        flights: (i === sortedLevels.length - 1) ? 0 : Math.ceil((sortedLevels[i + 1].elevation - level.elevation) / parse.F(this.props.activeStair.maxFlightRise)),\r\n        landingElevationDelta: this.props.activeStair.landingElevationDelta\r\n      }));\r\n\r\n      updatedStair = { ...this.props.activeStair, stories: selectedLevels, currentStep: 1 };\r\n\r\n    } else {\r\n      let stories = [];\r\n      for (let i = 0; i < this.props.activeStair.storyCount; i++) {\r\n        const isTop = this.props.activeStair.storyCount === i + 1;\r\n        const elevation = i === 0 ? 0 : parse.F(stories[i - 1].elevation) + parse.F(this.props.activeStair.defaultStoryHeight);\r\n        stories.push({\r\n          storyId: i + 1,\r\n          storyName: `Level ${i + 1}`,\r\n          modelLevelId: null,\r\n          elevation: fracFormatter(elevation),\r\n          flights: isTop ? 0 : 2,\r\n          landingElevationDelta: this.props.activeStair.landingElevationDelta\r\n        })\r\n      };\r\n\r\n      updatedStair = { ...this.props.activeStair, stories, currentStep: 1 };\r\n    }\r\n\r\n    this.props.updateCurrentStairwell(updatedStair);\r\n    this.calculateStairDims(updatedStair.stories);\r\n    //\r\n  }\r\n\r\n  calculateStairDims(stories) {\r\n\r\n\r\n    let flights = calculateFlightsFromStories(stories, this.props.activeStair);\r\n    flights = calculateStairDimensionsWithDogLegs(flights, this.props.activeStair);\r\n    const maxRunLength = Math.max(...flights.map(x => x.runLength), 0);\r\n    const stairLength = maxRunLength + 2 * parse.F(this.props.activeStair.stairWidth)*12;\r\n\r\n    let updatedStair = {\r\n      ...this.props.activeStair,\r\n      flights,\r\n      stories,\r\n      stairLength,\r\n      stairwellWidth: parse.F(this.props.activeStair.stairwellWidthF)*12,\r\n      currentStep: 1\r\n    };\r\n    if (this.props.activeStair.stairwellLengthHandling === \"predetermined\") {\r\n      updatedStair = {\r\n        ...updatedStair,\r\n        stairLength: parse.F(this.props.activeStair.predeterminedStairwellLength) * 12,\r\n        stairwellWidth: parse.F(this.props.activeStair.stairwellWidthF)*12,\r\n        flights: handleExcessLandingWidths(updatedStair)\r\n      };\r\n    }\r\n    this.props.updateCurrentStairwell(updatedStair);\r\n  }\r\n\r\n  calculateFlightDims(flights, stair = this.props.activeStair) {\r\n\r\n    //TODO:  Make safe copy...\r\n    flights = calculateStairDimensionsFromFlightElevations(flights, stair);\r\n\r\n    const maxRunLength = Math.max(...flights.map(x => x.runLength), 0);\r\n    const stairLength = maxRunLength + 2 * parse.F(this.props.activeStair.stairWidth)*12;\r\n\r\n    let updatedStair = {\r\n      ...stair,\r\n      flights,\r\n      stairLength,\r\n      currentStep: 1\r\n    };\r\n    if (this.props.activeStair.stairwellLengthHandling === \"predetermined\") {\r\n      updatedStair = {\r\n        ...updatedStair,\r\n        stairLength: parse.F(this.props.activeStair.predeterminedStairwellLength) * 12,\r\n        flights: handleExcessLandingWidths(updatedStair)\r\n      };\r\n    }\r\n    this.props.updateCurrentStairwell(updatedStair);\r\n  }\r\n\r\n  render() {\r\n    console.log('state: ' + JSON.stringify(this.props.activeStair))\r\n\r\n    const collectTopData =\r\n      <CollectTopData\r\n        handleStairInputChange={this.handleStairInputChange}\r\n        activeStair={this.props.activeStair}\r\n        handleStairValueUpdate={this.handleStairValueUpdate}\r\n        handleStairDirectionCheck={this.handleStairDirectionCheck}\r\n        handleStoryEnter={this.handleStoryEnter}\r\n        handleLevelSelectionUpdate={this.handleLevelSelectionUpdate}\r\n      />\r\n\r\n    const collectFloorData =\r\n      <CollectFloorLevelData\r\n        activeStair={this.props.activeStair}\r\n        //handleTableInputChange={this.handleTableInputChange}\r\n        handleStepClick={() => this.handleStepClick(2)}\r\n        //calculateStairDims={() => this.calculateFlightDims(this.props.activeStair.flights)}\r\n        addStory={this.addStory}\r\n        handleAddStoryToggle={this.handleAddStoryToggle}\r\n        handleElevationChange={this.handleElevationChange}\r\n        handleChangeStoryFlightCount={this.handleChangeStoryFlightCount}\r\n        handleLandingElevationDeltaChange={this.handleLandingElevationDeltaChange}\r\n      //checkFlighGeometry={this.checkFlighGeometry}\r\n\r\n      />\r\n\r\n    const collectFlightData =\r\n      <ReviewFlights\r\n        handleStairValueUpdate={this.handleStairValueUpdate}\r\n        activeStair={this.props.activeStair}\r\n        handleFlightsTableInputChange={this.handleFlightsTableInputChange}\r\n        handleUpdate={() => this.handleStepClick(3)}\r\n      //handleUpdate={() => this.calculateFlightDims(this.props.activeStair.flights)}\r\n      />\r\n\r\n\r\n    const placeStair = <PlaceStair\r\n      activeStair={this.props.activeStair}\r\n      handleStairValueUpdate={this.handleStairValueUpdate}\r\n      handleWindowClose={this.handleWindowClose} />\r\n\r\n    const renderCurrentStep = () => {\r\n      switch (this.props.activeStair.currentStep) {\r\n        case 0: return collectTopData;\r\n        case 1: return collectFloorData;\r\n        case 2: return collectFlightData;\r\n        case 3: return placeStair;\r\n        default: return placeStair;\r\n      }\r\n    }\r\n\r\n\r\n    //calcStairDims();\r\n\r\n    return (\r\n\r\n      <Row>\r\n\r\n        <Card title=\"Stairwell Geometry\" style={{ margin: 20 }} extra={<a onClick={this.props.toggleDrawer}>Project Details</a>}>\r\n          <Steps current={this.props.activeStair.currentStep}>\r\n            <Steps.Step key={1} title={\"Top Level Data\"} onClick={() => this.handleStepClick(0)} />\r\n            <Steps.Step key={2} title={\"Elevations\"} onClick={() => this.handleStepClick(1)} />\r\n            <Steps.Step key={3} title={\"Review/Edit Flights\"} onClick={() => this.handleStepClick(2)} />\r\n            <Steps.Step key={4} title={\"Place Stair\"} onClick={() => this.handleStepClick(3)} />\r\n          </Steps>\r\n          {renderCurrentStep()}\r\n        </Card>\r\n\r\n      </Row>\r\n\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  activeStair: state.activeStair\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateCurrentStairwell: (stair) => dispatch(updateCurrentStairwell(stair)),\r\n  getFloorLevels: () => dispatch(getFloorLevels()),\r\n  getFloorPlans: () => dispatch(getFloorPlans()),\r\n  getProjectGuid: () => dispatch(getProjectGuid())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StairwellLayoutContainer)\r\n","import {UPDATE_PROJECT, GET_PROJECT, GET_PROJECT_GUID} from './actionTypes';\r\n\r\nexport const updateProject = project => ({\r\n    type: UPDATE_PROJECT,\r\n    project\r\n})\r\n\r\nexport const getProject = () => ({\r\n    type: GET_PROJECT\r\n})\r\n\r\nexport const getProjectGuid = () => ({\r\n    type: GET_PROJECT_GUID\r\n})\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Card, Select } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { updateCurrentStairwell, getStairwell } from '../actions/stairsActions';\r\nimport { getProject } from '../actions/projectActions';\r\nimport {\r\n  withRouter\r\n} from 'react-router-dom';\r\n\r\nclass StairwellEditContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n    this.handleStairSelect = this.handleStairSelect.bind(this);\r\n  };\r\n  componentWillMount() {\r\n    this.props.getProject();\r\n  }\r\n\r\n  handleStairSelect(value) {\r\n    this.props.getStairwell(value);\r\n    this.props.history.push(\"/\");\r\n  }\r\n\r\n  render() {\r\n    const stairs = this.props.project.stairwells.map(x => x.stairName);\r\n    const renderStairSelect = () => {\r\n      const options = stairs.map(stair => <Select.Option value={stair}>{stair}</Select.Option>);\r\n      return (\r\n\r\n        <Select style={{ width: 120 }} onChange={this.handleStairSelect}>\r\n          {options}\r\n        </Select>\r\n\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Row>\r\n        <Col lg={4}></Col>\r\n        <Col lg={16}>\r\n          <Card title=\"Stairwell Edit\" style={{ margin: 20 }}>\r\n            {renderStairSelect()}\r\n            <span>{JSON.stringify(this.state.currentStair)}</span>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={4} />\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\n//export default withRouter(StairwellEditContainer);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  activeStair: state.activeStair,\r\n  project: state.project\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateCurrentStairwell: (stair) => dispatch(updateCurrentStairwell(stair)),\r\n  getProject: () => dispatch(getProject()),\r\n  getStairwell: (stairName) => dispatch(getStairwell(stairName))\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(StairwellEditContainer));","import React, { Component } from 'react';\nimport './App.css';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { Drawer, Form, Input, Button } from 'antd';\nimport { postAjax } from './Util/ajaxUtils';\n\nimport StairwellLayoutContainer from '../src/StairwellLayout/StairwellLayoutContainer';\nimport StairwellEditContainer from './StairwellEdit/StairwellEditContainer';\nimport { connect } from 'react-redux';\nimport {awsApiUrl} from './Util/constants'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      drawerVisible: false\n    }\n    this.toggleDrawer = this.toggleDrawer.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handlePostStair = this.handlePostStair.bind(this);\n  }\n\n  toggleDrawer() {\n    this.setState(\n      {\n        drawerVisible: !this.state.drawerVisible\n      })\n  }\n\n  handlePostStair() {\n    const stairWellData = {\n      projectId: this.props.projectGuid,\n      configurationJson: JSON.stringify(this.props.activeStair),\n      stairwellId: this.props.activeStair.stairName\n    };\n  //TODO: need callback to notfy ui of success\n  console.log('out', JSON.stringify(this.props.activeStair))\n    postAjax(awsApiUrl, stairWellData);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Drawer\n          title=\"Project Data\"\n          placement=\"right\"\n          closable={false}\n          onClose={this.toggleDrawer}\n          visible={this.state.drawerVisible}\n        >\n\n          <Form>\n            <Form.Item label=\"Project Name:\">\n              <Input onChange={this.handleInputChange} name=\"projectName\" />\n\n            </Form.Item>\n          </Form>\n          <Button onClick={this.handlePostStair}>Submit Stair</Button>\n\n        </Drawer>\n        <HashRouter>\n          <div>\n            {/* <Route exact path=\"/\" render={() => <div>hello</div>} /> */}\n            <Route exact path=\"/\" render={() => <StairwellLayoutContainer toggleDrawer={this.toggleDrawer} />} />\n            <Route path=\"/edit\" render={() => <StairwellEditContainer />} />\n          </div>\n        </HashRouter>\n      </div >\n    );\n  }\n}\n\n\n\nconst mapStateToProps = (state) => ({\n  activeStair: state.activeStair,\n  projectGuid: state.project.projectGuid\n});\nconst mapDispatchToProps = (dispatch) => ({\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","export function postAjax(url, data) {\r\n    // var params = typeof data == 'string' ? data : Object.keys(data).map(\r\n    //         function(k){ return encodeURIComponent(k) + '=' + encodeURIComponent(data[k]) }\r\n    //     ).join('&');\r\n\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('POST', url);\r\n    xhr.onreadystatechange = function() {\r\n        if (xhr.readyState>3 && xhr.status==200) { console.log(xhr.responseText); }\r\n    };\r\n    xhr.setRequestHeader('Content-Type', 'application/json');\r\n    xhr.send(JSON.stringify(data));\r\n    return xhr;\r\n};\r\n\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, compose } from 'redux';\nimport rootReducer from './reducers/rootReducer';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { sampleLevels, samplePlanLevels, initialState } from './Util/constants';\nimport _includes from 'lodash/includes';\n\nconst store = createStore(rootReducer, initialState, compose(window.devToolsExtension ? window.devToolsExtension() : f => f))\nif (_includes(window.location.toString(), '?test')) {\n    var r = (new Date()).getTime().toString(16) +\n        Math.random().toString(16).substring(2) + \"0\".repeat(16);\n    var guid = r.substr(0, 8) + '-' + r.substr(8, 4) + '-4000-8' +\n        r.substr(12, 3) + '-' + r.substr(15, 12);\n    window.UiBrowserState = {\n        levels: JSON.stringify(sampleLevels),\n        planLevels: JSON.stringify(samplePlanLevels),\n        projectGuid: guid\n    };\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}